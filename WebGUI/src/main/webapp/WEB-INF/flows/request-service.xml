<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
        http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<on-start>
		<evaluate expression="manager.getAllInterdomainManagers()" result="flowScope.idms" />
		<evaluate expression="manager.getTimezone()" result="flowScope.appTimezone" />
		<evaluate expression="manager.getServiceRequestTemplate()" result="flowScope.service" />
        <evaluate expression="manager.getUserAuthParameters()" result="flowScope.authParameters" />
	</on-start>
	<decision-state id="moreAnswersNeeded">
    	<if test="flowScope.idms== null ||flowScope.idms.isEmpty()" then="no-idm-regitered" else="request-service" />
	</decision-state>

	<view-state id="request-service" view="secure/request-service" model="service">
		 <binder>
		 	<binding property="userHomeDomain" required="true"/>
            <binding property="justification" required="true"/>    
    	</binder>
		<transition on="cancel" to="services" bind="false" />

		<transition on="submit" to="request-service-success" bind="true">
			<evaluate expression="manager.submitServiceAtInterDomainManager(service.userHomeDomain, service)" result="flowScope.serviceId"/>
			<evaluate expression="manager.getServiceRequestTemplate()"></evaluate>		
		</transition>
		<transition on="add" to="addReservation" bind="true">
			<set name="flowScope.home" value="service.userHomeDomain" type="string"/>
			<evaluate expression="manager.getInterDomainManagerPorts(service.userHomeDomain)" result="flowScope.friendlyports_domain"/>
			<evaluate expression="manager.getAllClientPorts(service.userHomeDomain)" result="flowScope.friendlyports_all"/>
			<evaluate expression="manager.getAllIdcpPorts(service.userHomeDomain)" result="flowScope.idcpPorts_all"/>
			<evaluate expression="manager.getAllDomains_NonClient()" result="flowScope.domains_all"/>
			<evaluate expression="manager.getAllDomainLinks()" result="flowScope.links_all"/>
			<evaluate expression="manager.getReservationRequestTemplate()" result="flowScope.reservation"/>
			<evaluate expression="manager.getTimezones()" result="flowScope.timezones"/>
			<evaluate expression="manager.getReservationModes()" result="flowScope.modes"/>
		</transition>
		<transition on-exception="java.lang.Exception" to="request-service"> 
			<evaluate expression="exceptionTranslator.translateException(flowRequestContext, flowExecutionException)"/>
		</transition>	
		<transition on="remove" to="request-service">
			<set name="requestScope.id" value="requestParameters.id" type="int"/>
			<evaluate expression="service.getReservations().remove(id)"/>
		</transition>
	</view-state>

	<view-state id="request-service-success" view="secure/request-reservation">
	</view-state>

	<view-state id="addReservation" view="secure/request-reservation" model="reservation">
		<binder>
			<binding property="timezone" required="true"/>
			<binding property="request.startPort.address" required="true" />
			<binding property="request.startPort.mode" converter="reservation-mode" required="true"/>
			<binding property="request.startPort.vlan" />
			<binding property="request.endPort.address" required="true"/>
			<binding property="request.endPort.mode" converter="reservation-mode" required="true" />
			<binding property="request.endPort.vlan"/>
			<binding property="request.startPortFriendlyName" />
			<binding property="request.endPortFriendlyName" />
			<binding property="request.startTime" converter="calendar" required="true"/>
			<binding property="request.endTime" converter="calendar" required="true"/>
			<binding property="request.maxDelay"  required="true"/>
			<binding property="request.capacity"  required="true"/>
			<binding property="request.mtu"  required="true"/>
			<binding property="request.userInclude.domains"/>
			<binding property="request.userInclude.links"/>
			<binding property="request.userExclude.domains"/>
			<binding property="request.userExclude.links"/>
			<binding property="request.processNow"/>
			<binding property="request.description" required="true"/>
		</binder>
		<transition on="submit" to="request-service" bind="true">
			<evaluate expression="manager.convertTimeToApplicationTimezone(reservation.timezone,reservation.request)"/>
			<evaluate expression="manager.convertCapacity(reservation.request)"/>
			<evaluate expression="service.getReservations().add(reservation.request)"/>
		</transition>
		
		<transition on="cancel" to="request-service" bind="false"/>
		
		<transition on="test" to="addReservation" bind="true" validate="true" >
			<evaluate expression="manager.convertTimeToApplicationTimezone(reservation.timezone,reservation.request)"/>
			<evaluate expression="manager.checkReservationPossibility(flowScope.home,reservation.request)" result="flashScope.test"/>		
		</transition>
		<transition on-exception="java.lang.Exception" to="addReservation"> 
			<evaluate expression="exceptionTranslator.translateException(flowRequestContext, flowExecutionException)"/>
		</transition>
	</view-state> 

	<end-state id="no-idm-regitered" view="secure/noIDMRegistered"/>
	 <end-state id="services" 
         view="externalRedirect:contextRelative:/portal/secure/reservations_select.htm">
      </end-state>  
</flow>
