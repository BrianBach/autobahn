<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">

        <global-method-security secured-annotations="disabled"
                access-decision-manager-ref="acdm">

                <!--
                access={custom expression}
                e.g. ROLE_USER ORG_RNET,ROLE_ADMINISTRATOR = (ROLE_USER and ORG_GRNET) or (ROLE_ADMINISTRATOR)
                -->
                <protect-pointcut
                        expression="execution(* net.geant.autobahn.aai.DmUserAuthorizer.authorize(..))"
                        access="ROLE_USER ORG_RNET,ROLE_ADMINISTRATOR" />
        </global-method-security>

        <beans:bean id="authenticationManager"
                class="org.springframework.security.MockAuthenticationManager">
                <beans:constructor-arg value="true" />
                <custom-authentication-provider />
        </beans:bean>

        <beans:bean id="uauthorizer"
                class="net.geant.autobahn.aai.DmUserAuthorizer" />

        <beans:bean class="org.springframework.security.vote.AffirmativeBased"
                id="acdm">
                <beans:property name="decisionVoters">
                        <beans:list>
                                <beans:bean class="net.geant.autobahn.aai.SpaceSeparatedBasedVoter" />
                        </beans:list>
                </beans:property>
        </beans:bean>

</beans:beans>
