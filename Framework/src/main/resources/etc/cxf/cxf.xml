<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:soap="http://cxf.apache.org/bindings/soap"
	xmlns:sec="http://cxf.apache.org/configuration/security"
	xmlns:http="http://cxf.apache.org/transports/http/configuration"
	xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://cxf.apache.org/bindings/soap http://cxf.apache.org/schemas/configuration/soap.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd
http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd">
    

    <bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>etc/services.properties</value>
            </list>
        </property>
       
        <property name="ignoreResourceNotFound" value="false" />
    </bean>
   
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="properties" />
    </bean>
    
	<bean id="SecurityPasswordCallback" class="net.geant.autobahn.edugain.SecurityPasswordCallback">
		<constructor-arg type="java.lang.String" value="etc/security/security.properties"/>
	</bean>
	    
	<bean id="initSecurity" class="net.geant.autobahn.edugain.WSSecurity">
		<constructor-arg index="0" type="java.lang.String" value="etc/security"/>
	</bean>	
			
	<bean id="readProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref bean="initSecurity"/></property>
		<property name="targetMethod"><value>readProperties</value></property>
	</bean>
	
	<bean id="convertFileToProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref bean="initSecurity"/></property>
		<property name="targetMethod"><value>convertFileToProps</value></property>
	</bean>
	
	<bean id="edugainActive" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref bean="initSecurity"/></property>
		<property name="targetMethod"><value>getEdugainActive</value></property>
	</bean>

	<bean id="initEdugain" class="net.geant.autobahn.edugain.Edugain">
		<constructor-arg index="0" type="java.lang.String" value="etc/security/edugain/edugain.properties"/>
	</bean>
	
	<bean id="edugainProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref bean="initEdugain"/></property>
		<property name="targetMethod"><value>getPropsLoaderForWGui</value></property>
	</bean>
	
	<bean id="IdcpServerKeyPasswordCallback" class="net.geant.autobahn.idcp.KeyPasswordCallback">
		<constructor-arg type="java.lang.String" value="autobahnsslkey"/>
	</bean>
	
	<bean id="IdcpClientKeyPasswordCallback" class="net.geant.autobahn.idcp.KeyPasswordCallback">
		<constructor-arg type="java.lang.String" value="autobahnkey"/>	
	</bean>	

	<jaxws:endpoint id="idm2dm" implementor="net.geant.autobahn.idm2dm.Idm2DmImpl" address="http://${server.ip}:${server.port}/autobahn/idm2dm">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>			
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>	
	</jaxws:endpoint>
    
    

	<jaxws:endpoint id="dm2idm" implementor="net.geant.autobahn.dm2idm.Dm2IdmImpl" address="http://${server.ip}:${server.port}/autobahn/dm2idm">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>		
	</jaxws:endpoint>
	
	<jaxws:endpoint id="dmadmin" implementor="net.geant.autobahn.intradomain.administration.AdministrationImpl" address="http://${server.ip}:${server.port}/autobahn/dmadmin">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>		
	</jaxws:endpoint>
	
	<jaxws:endpoint id="interdomain" implementor="net.geant.autobahn.interdomain.InterdomainImpl" address="http://${server.ip}:${server.port}/autobahn/interdomain">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>		
	</jaxws:endpoint>
	
	<jaxws:endpoint id="topologyabstraction" implementor="net.geant.autobahn.converter.TopologyAbstractionImpl" address="http://${server.ip}:${server.port}/autobahn/topologyabstraction">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>	
	</jaxws:endpoint>
		
	<jaxws:endpoint id="uap" implementor="net.geant.autobahn.useraccesspoint.UserAccessPointImpl" address="http://${server.ip}:${server.port}/autobahn/uap">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>		
	</jaxws:endpoint>
	
	<jaxws:endpoint id="administration" implementor="net.geant.autobahn.administration.AdministrationImpl" address="http://${server.ip}:${server.port}/autobahn/administration">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>		
	</jaxws:endpoint>
	
	<jaxws:endpoint id="resourcesreservationcalendar" implementor="net.geant.autobahn.calendar.ResourcesReservationCalendarImpl" address="http://${server.ip}:${server.port}/autobahn/resourcesreservationcalendar">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>	
	</jaxws:endpoint>	

	<jaxws:endpoint id="autobahnmanager" implementor="net.geant.autobahn.framework.manager.AutobahnManagerImpl" address="http://${server.ip}:${server.port}/autobahn/autobahnmanager">
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="decryptionPropRefId" value="propsLoader"/>
						<entry key="propsLoader" value-ref="convertFileToProps"/>
					</map>
				</constructor-arg>
			</bean>			
			<bean class="net.geant.autobahn.edugain.EdugainSupport">
				<constructor-arg index="0" type="java.util.Properties">
					<ref bean="edugainProps"/>
				</constructor-arg>
				<constructor-arg index="1" type="java.lang.String">
					<ref bean="edugainActive"/>
				</constructor-arg>
			</bean>
		</jaxws:inInterceptors>
		
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
				<constructor-arg>
					<map>               
						<entry key="action" value-ref="readProps"/>
						<entry key="user" value="autobahn"/>
						<entry key="signatureKeyIdentifier" value="DirectReference"/>
						<entry key="SignaturePropRefId" value="propsLoader"/>
						<entry key="passwordType" value="PasswordDigest"/>
						<entry key="passwordCallbackRef">
							<ref bean="SecurityPasswordCallback"/>
						</entry>
						<entry key="encryptionPropRefId" value="propsLoader"/>
						<entry key="encryptionUser" value="autobahn"/>
						<entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
						<entry key="encryptionParts" value="{Content}{}Body"/>	
						<entry key="propsLoader" value-ref="convertFileToProps"/>					
					</map>
				</constructor-arg>
			</bean>
		</jaxws:outInterceptors>	
	</jaxws:endpoint>	

	<jaxws:endpoint id="oscars" implementor="net.geant.autobahn.idcp.OSCARSImpl" address="https://${server.ip}:${server.securePort}/autobahn/oscars" wsdlLocation="etc/wsdl/IDCP/OSCARS.wsdl">
		<jaxws:properties>
			<entry key="ws-security.callback-handler">
				<ref bean="IdcpServerKeyPasswordCallback"/>
			</entry>
			<entry key="ws-security.signature.properties" value="etc/security/idcp/autobahnssl.properties"/>
			<entry key="ws-security.signature.username" value="autobahnssl"/>
		</jaxws:properties> 
	</jaxws:endpoint>
	
	<jaxws:endpoint id="oscarsnotify" implementor="net.geant.autobahn.idcp.notify.OSCARSNotifyImpl" address="https://${server.ip}:${server.securePort}/autobahn/oscarsnotify" wsdlLocation="etc/wsdl/IDCP/OSCARS-Notify.wsdl">
		<jaxws:properties>
			<entry key="ws-security.callback-handler">
				<ref bean="IdcpServerKeyPasswordCallback"/>
			</entry>
			<entry key="ws-security.signature.properties" value="etc/security/idcp/autobahnssl.properties"/>
			<entry key="ws-security.signature.username" value="autobahnssl"/>
		</jaxws:properties> 
	</jaxws:endpoint>
	
    <jaxws:client name="{http://oscars.es.net/OSCARS}OSCARS" createdFromAPI="true">
        <jaxws:properties>
			<entry key="ws-security.callback-handler" value-ref="IdcpClientKeyPasswordCallback"/>        
			
			<entry key="ws-security.signature.properties" value="etc/security/idcp/autobahn.properties"/>
			<entry key="ws-security.signature.username" value="autobahn"/>
		</jaxws:properties>
    </jaxws:client>   
    
    <jaxws:client name="{http://oscars.es.net/OSCARS}OSCARSNotify" createdFromAPI="true">
        <jaxws:properties>
			<entry key="ws-security.callback-handler" value-ref="IdcpClientKeyPasswordCallback"/>        
			<entry key="ws-security.signature.properties" value="etc/security/idcp/autobahn.properties"/>
			<entry key="ws-security.signature.username" value="autobahn"/>
		</jaxws:properties>
    </jaxws:client>   
	
	<http:conduit name="{http://oscars.es.net/OSCARS}OSCARS.http-conduit">
    <http:tlsClientParameters disableCNCheck="true" secureSocketProtocol="SSL">
    
      <sec:trustManagers>
          <sec:keyStore type="JKS" password="autobahnpass" file="etc/security/idcp/autobahn.jks"/>
      </sec:trustManagers>      
      
      <sec:cipherSuitesFilter>
      	  <sec:include>.*_EXPORT_.*</sec:include>
      	  <sec:include>.*_EXPORT1024_.*</sec:include>
      	  <sec:include>.*_WITH_DES_.*</sec:include>
      	  <sec:include>.*_WITH_NULL_.*</sec:include>
      	  <sec:exclude>.*_DH_anon_.*</sec:exclude>
      </sec:cipherSuitesFilter>
      
    </http:tlsClientParameters>
   </http:conduit>
   
   <http:conduit name="{http://oscars.es.net/OSCARS}OSCARSNotify.http-conduit">
    <http:tlsClientParameters disableCNCheck="true" secureSocketProtocol="SSL">
    
      <sec:trustManagers>
          <sec:keyStore type="JKS" password="autobahnpass" file="etc/security/idcp/autobahn.jks"/>
      </sec:trustManagers>     
      
      <sec:cipherSuitesFilter>
          <sec:include>.*_EXPORT_.*</sec:include>
  	      <sec:include>.*_EXPORT1024_.*</sec:include>
     	  <sec:include>.*_WITH_DES_.*</sec:include>
      	  <sec:include>.*_WITH_NULL_.*</sec:include>
      	  <sec:exclude>.*_DH_anon_.*</sec:exclude>
      </sec:cipherSuitesFilter>
       
    </http:tlsClientParameters>
   </http:conduit>

  <http:destination name="{http://oscars.es.net/OSCARS}OSCARS.http-destination">    
  </http:destination>
  
  <http:destination name="{http://oscars.es.net/OSCARS}OSCARSNotify.http-destination">    
  </http:destination>
  
  <httpj:engine-factory>
	 <httpj:engine port="${server.securePort}">	 	
	     <httpj:tlsServerParameters secureSocketProtocol="TLS">
	     
         <sec:keyManagers keyPassword="autobahnkey">
	     		<sec:keyStore type="JKS" password="autobahnpass" 
	             	file="etc/security/idcp/autobahn.jks"/>
	      </sec:keyManagers>
	      
	      <sec:trustManagers>
	      		<sec:keyStore type="JKS" password="autobahnsslpass"
		   			file="etc/security/idcp/autobahnssl.jks"/>
	      </sec:trustManagers>

	      <sec:cipherSuitesFilter>
	      <sec:include>.*_EXPORT_.*</sec:include>
		       <sec:include>.*_EXPORT1024_.*</sec:include>
	           <sec:include>.*_WITH_DES_.*</sec:include>
	           <sec:include>.*_WITH_NULL_.*</sec:include>
	           <sec:exclude>.*_DH_anon_.*</sec:exclude>
	      </sec:cipherSuitesFilter>
	      <sec:clientAuthentication want="true" required="false"/>
	    </httpj:tlsServerParameters>
	  </httpj:engine>
   </httpj:engine-factory>

</beans>
