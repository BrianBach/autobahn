package net.geant.autobahn.idcp;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
import javax.xml.ws.soap.SOAPBinding;

/**
 * This class was generated by Apache CXF 2.4.2
 * 2011-09-05T13:54:31.343+02:00
 * Generated source version: 2.4.2
 * 
 */
@WebServiceClient(name = "OSCARSNotify", 
                  wsdlLocation = "file:etc/wsdl/IDCP/OSCARS-Notify.wsdl",
                  targetNamespace = "http://oscars.es.net/OSCARS") 
public class OSCARSNotify_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://oscars.es.net/OSCARS", "OSCARSNotify");
    public final static QName OSCARSNotify = new QName("http://oscars.es.net/OSCARS", "OSCARSNotify");
    static {
        URL url = null;
        try {
            url = new URL("file:etc/wsdl/IDCP/OSCARS-Notify.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(OSCARSNotify_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:etc/wsdl/IDCP/OSCARS-Notify.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public OSCARSNotify_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OSCARSNotify_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OSCARSNotify_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    /**
     * if endpoint is null, the OSCARS location will be retrieved from WSDL
     */
    public OSCARSNotify_Service(String endpoint) {
        super(WSDL_LOCATION, SERVICE);
        if (endpoint!=null) {
            super.addPort(OSCARSNotify, SOAPBinding.SOAP11HTTP_BINDING, endpoint);
        }
    }

    /**
     *
     * @return
     *     returns OSCARSNotify
     */
    @WebEndpoint(name = "OSCARSNotify")
    public OSCARSNotify getOSCARSNotify() {
        return super.getPort(OSCARSNotify, OSCARSNotify.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OSCARSNotify
     */
    @WebEndpoint(name = "OSCARSNotify")
    public OSCARSNotify getOSCARSNotify(WebServiceFeature... features) {
        return super.getPort(OSCARSNotify, OSCARSNotify.class, features);
    }

}
