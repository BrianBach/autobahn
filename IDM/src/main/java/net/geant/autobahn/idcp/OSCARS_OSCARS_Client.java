
package net.geant.autobahn.idcp;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.2.6
 * Fri Jul 16 16:33:14 CEST 2010
 * Generated source version: 2.2.6
 * 
 */

public final class OSCARS_OSCARS_Client {

    private static final QName SERVICE_NAME = new QName("http://oscars.es.net/OSCARS", "OSCARS");

    private OSCARS_OSCARS_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = OSCARS_Service.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        OSCARS_Service ss = new OSCARS_Service(wsdlURL, SERVICE_NAME);
        OSCARS port = ss.getOSCARS();  
        
        {
        System.out.println("Invoking cancelReservation...");
        net.geant.autobahn.idcp.GlobalReservationId _cancelReservation_cancelReservation = null;
        try {
            java.lang.String _cancelReservation__return = port.cancelReservation(_cancelReservation_cancelReservation);
            System.out.println("cancelReservation.result=" + _cancelReservation__return);

        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking createReservation...");
        java.lang.String _createReservation_globalReservationIdVal = "";
        javax.xml.ws.Holder<java.lang.String> _createReservation_globalReservationId = new javax.xml.ws.Holder<java.lang.String>(_createReservation_globalReservationIdVal);
        long _createReservation_startTime = 0;
        long _createReservation_endTime = 0;
        int _createReservation_bandwidth = 0;
        java.lang.String _createReservation_description = "";
        net.geant.autobahn.idcp.PathInfo _createReservation_pathInfoVal = null;
        javax.xml.ws.Holder<net.geant.autobahn.idcp.PathInfo> _createReservation_pathInfo = new javax.xml.ws.Holder<net.geant.autobahn.idcp.PathInfo>(_createReservation_pathInfoVal);
        javax.xml.ws.Holder<java.lang.String> _createReservation_token = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _createReservation_status = new javax.xml.ws.Holder<java.lang.String>();
        try {
            port.createReservation(_createReservation_globalReservationId, _createReservation_startTime, _createReservation_endTime, _createReservation_bandwidth, _createReservation_description, _createReservation_pathInfo, _createReservation_token, _createReservation_status);

            System.out.println("createReservation._createReservation_globalReservationId=" + _createReservation_globalReservationId.value);
            System.out.println("createReservation._createReservation_pathInfo=" + _createReservation_pathInfo.value);
            System.out.println("createReservation._createReservation_token=" + _createReservation_token.value);
            System.out.println("createReservation._createReservation_status=" + _createReservation_status.value);
        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking queryReservation...");
        java.lang.String _queryReservation_gri = "";
        javax.xml.ws.Holder<java.lang.String> _queryReservation_globalReservationId = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _queryReservation_login = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _queryReservation_status = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.Long> _queryReservation_startTime = new javax.xml.ws.Holder<java.lang.Long>();
        javax.xml.ws.Holder<java.lang.Long> _queryReservation_endTime = new javax.xml.ws.Holder<java.lang.Long>();
        javax.xml.ws.Holder<java.lang.Long> _queryReservation_createTime = new javax.xml.ws.Holder<java.lang.Long>();
        javax.xml.ws.Holder<java.lang.Integer> _queryReservation_bandwidth = new javax.xml.ws.Holder<java.lang.Integer>();
        javax.xml.ws.Holder<java.lang.String> _queryReservation_description = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<net.geant.autobahn.idcp.PathInfo> _queryReservation_pathInfo = new javax.xml.ws.Holder<net.geant.autobahn.idcp.PathInfo>();
        try {
            port.queryReservation(_queryReservation_gri, _queryReservation_globalReservationId, _queryReservation_login, _queryReservation_status, _queryReservation_startTime, _queryReservation_endTime, _queryReservation_createTime, _queryReservation_bandwidth, _queryReservation_description, _queryReservation_pathInfo);

            System.out.println("queryReservation._queryReservation_globalReservationId=" + _queryReservation_globalReservationId.value);
            System.out.println("queryReservation._queryReservation_login=" + _queryReservation_login.value);
            System.out.println("queryReservation._queryReservation_status=" + _queryReservation_status.value);
            System.out.println("queryReservation._queryReservation_startTime=" + _queryReservation_startTime.value);
            System.out.println("queryReservation._queryReservation_endTime=" + _queryReservation_endTime.value);
            System.out.println("queryReservation._queryReservation_createTime=" + _queryReservation_createTime.value);
            System.out.println("queryReservation._queryReservation_bandwidth=" + _queryReservation_bandwidth.value);
            System.out.println("queryReservation._queryReservation_description=" + _queryReservation_description.value);
            System.out.println("queryReservation._queryReservation_pathInfo=" + _queryReservation_pathInfo.value);
        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking refreshPath...");
        java.lang.String _refreshPath_token = "";
        java.lang.String _refreshPath_globalReservationIdVal = "";
        javax.xml.ws.Holder<java.lang.String> _refreshPath_globalReservationId = new javax.xml.ws.Holder<java.lang.String>(_refreshPath_globalReservationIdVal);
        javax.xml.ws.Holder<java.lang.String> _refreshPath_status = new javax.xml.ws.Holder<java.lang.String>();
        try {
            port.refreshPath(_refreshPath_token, _refreshPath_globalReservationId, _refreshPath_status);

            System.out.println("refreshPath._refreshPath_globalReservationId=" + _refreshPath_globalReservationId.value);
            System.out.println("refreshPath._refreshPath_status=" + _refreshPath_status.value);
        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking teardownPath...");
        java.lang.String _teardownPath_token = "";
        java.lang.String _teardownPath_globalReservationIdVal = "";
        javax.xml.ws.Holder<java.lang.String> _teardownPath_globalReservationId = new javax.xml.ws.Holder<java.lang.String>(_teardownPath_globalReservationIdVal);
        javax.xml.ws.Holder<java.lang.String> _teardownPath_status = new javax.xml.ws.Holder<java.lang.String>();
        try {
            port.teardownPath(_teardownPath_token, _teardownPath_globalReservationId, _teardownPath_status);

            System.out.println("teardownPath._teardownPath_globalReservationId=" + _teardownPath_globalReservationId.value);
            System.out.println("teardownPath._teardownPath_status=" + _teardownPath_status.value);
        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking createPath...");
        java.lang.String _createPath_token = "";
        java.lang.String _createPath_globalReservationIdVal = "";
        javax.xml.ws.Holder<java.lang.String> _createPath_globalReservationId = new javax.xml.ws.Holder<java.lang.String>(_createPath_globalReservationIdVal);
        javax.xml.ws.Holder<java.lang.String> _createPath_status = new javax.xml.ws.Holder<java.lang.String>();
        try {
            port.createPath(_createPath_token, _createPath_globalReservationId, _createPath_status);

            System.out.println("createPath._createPath_globalReservationId=" + _createPath_globalReservationId.value);
            System.out.println("createPath._createPath_status=" + _createPath_status.value);
        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getNetworkTopology...");
        net.geant.autobahn.idcp.GetTopologyContent _getNetworkTopology_getNetworkTopology = null;
        try {
            net.geant.autobahn.idcp.GetTopologyResponseContent _getNetworkTopology__return = port.getNetworkTopology(_getNetworkTopology_getNetworkTopology);
            System.out.println("getNetworkTopology.result=" + _getNetworkTopology__return);

        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking modifyReservation...");
        java.lang.String _modifyReservation_globalReservationId = "";
        long _modifyReservation_startTime = 0;
        long _modifyReservation_endTime = 0;
        int _modifyReservation_bandwidth = 0;
        java.lang.String _modifyReservation_description = "";
        net.geant.autobahn.idcp.PathInfo _modifyReservation_pathInfo = null;
        try {
            net.geant.autobahn.idcp.ResDetails _modifyReservation__return = port.modifyReservation(_modifyReservation_globalReservationId, _modifyReservation_startTime, _modifyReservation_endTime, _modifyReservation_bandwidth, _modifyReservation_description, _modifyReservation_pathInfo);
            System.out.println("modifyReservation.result=" + _modifyReservation__return);

        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking notify...");
        org.oasis_open.docs.wsn.b_2.Notify _notify_notify = null;
        port.notify(_notify_notify);


        }
        {
        System.out.println("Invoking forward...");
        net.geant.autobahn.idcp.ForwardPayload _forward_payload = null;
        java.lang.String _forward_payloadSender = "";
        javax.xml.ws.Holder<java.lang.String> _forward_contentType = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<net.geant.autobahn.idcp.CreateReply> _forward_createReservation = new javax.xml.ws.Holder<net.geant.autobahn.idcp.CreateReply>();
        javax.xml.ws.Holder<net.geant.autobahn.idcp.ModifyResReply> _forward_modifyReservation = new javax.xml.ws.Holder<net.geant.autobahn.idcp.ModifyResReply>();
        javax.xml.ws.Holder<java.lang.String> _forward_cancelReservation = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<net.geant.autobahn.idcp.ResDetails> _forward_queryReservation = new javax.xml.ws.Holder<net.geant.autobahn.idcp.ResDetails>();
        javax.xml.ws.Holder<net.geant.autobahn.idcp.ListReply> _forward_listReservations = new javax.xml.ws.Holder<net.geant.autobahn.idcp.ListReply>();
        javax.xml.ws.Holder<net.geant.autobahn.idcp.CreatePathResponseContent> _forward_createPath = new javax.xml.ws.Holder<net.geant.autobahn.idcp.CreatePathResponseContent>();
        javax.xml.ws.Holder<net.geant.autobahn.idcp.RefreshPathResponseContent> _forward_refreshPath = new javax.xml.ws.Holder<net.geant.autobahn.idcp.RefreshPathResponseContent>();
        javax.xml.ws.Holder<net.geant.autobahn.idcp.TeardownPathResponseContent> _forward_teardownPath = new javax.xml.ws.Holder<net.geant.autobahn.idcp.TeardownPathResponseContent>();
        try {
            port.forward(_forward_payload, _forward_payloadSender, _forward_contentType, _forward_createReservation, _forward_modifyReservation, _forward_cancelReservation, _forward_queryReservation, _forward_listReservations, _forward_createPath, _forward_refreshPath, _forward_teardownPath);

            System.out.println("forward._forward_contentType=" + _forward_contentType.value);
            System.out.println("forward._forward_createReservation=" + _forward_createReservation.value);
            System.out.println("forward._forward_modifyReservation=" + _forward_modifyReservation.value);
            System.out.println("forward._forward_cancelReservation=" + _forward_cancelReservation.value);
            System.out.println("forward._forward_queryReservation=" + _forward_queryReservation.value);
            System.out.println("forward._forward_listReservations=" + _forward_listReservations.value);
            System.out.println("forward._forward_createPath=" + _forward_createPath.value);
            System.out.println("forward._forward_refreshPath=" + _forward_refreshPath.value);
            System.out.println("forward._forward_teardownPath=" + _forward_teardownPath.value);
        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking listReservations...");
        net.geant.autobahn.idcp.ListRequest _listReservations_listReservations = null;
        try {
            net.geant.autobahn.idcp.ListReply _listReservations__return = port.listReservations(_listReservations_listReservations);
            System.out.println("listReservations.result=" + _listReservations__return);

        } catch (AAAFaultMessage e) { 
            System.out.println("Expected exception: AAAFaultMessage has occurred.");
            System.out.println(e.toString());
        } catch (BSSFaultMessage e) { 
            System.out.println("Expected exception: BSSFaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
